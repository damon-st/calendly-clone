// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @default(uuid()) @map("_id")

  userId   String  @unique
  name     String?
  email    String  @unique
  imageUrl String?
  userName String

  introInfoId String?
  introInfo   IntroInfo? @relation(fields: [introInfoId], references: [id], onDelete: Cascade)

  events EventType[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([introInfoId])
}

model IntroInfo {
  id String @id @default(uuid()) @map("_id")

  userId String @unique

  howDoyPlanUsingCalendly String?
  howDoYouWork            String?

  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ScheduleM {
  id String @id @default(uuid()) @map("_id")

  userId      String
  title       String
  timeZone    String
  countryCode String
  countryName String
  favorite    Boolean

  scheduleWeekDays ScheduleWeekdDays[]

  eventTypes EventType[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ScheduleWeekdDays {
  id String @id @default(uuid()) @map("_id")

  weekDay    Int
  weekDayStr String
  active     Boolean @default(true)

  scheduleHours ScheduleHoursM[]

  scheduleId String
  schedule   ScheduleM @relation(fields: [scheduleId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([scheduleId])
}

model ScheduleHoursM {
  id String @id @default(uuid()) @map("_id")

  hourInit    Int
  hourInitStr String
  hourEnd     Int
  hourEndStr  String

  minuteInit    Int
  minuteInitStr String
  minuteEnd     Int
  minuteEndStr  String

  order Int @default(0)

  scheduleWeekDayId String
  scheduleWeekDay   ScheduleWeekdDays @relation(references: [id], fields: [scheduleWeekDayId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([scheduleWeekDayId])
}

model EventType {
  id String @id @default(uuid()) @map("_id")

  userId String
  user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)

  eventName  String
  colorEvent String
  typeEvent  String

  duration Json
  location Json

  eventLinkName    String
  inviteQuestions  Json[]
  linksConfirmPage Json[]

  scheduleAvailibityId String
  scheduleAvailibity   ScheduleM @relation(references: [id], fields: [scheduleAvailibityId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([scheduleAvailibityId])
}
